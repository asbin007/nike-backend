version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nike_postgres_dev
    environment:
      POSTGRES_DB: nike_db_dev
      POSTGRES_USER: nike_user
      POSTGRES_PASSWORD: nike_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - nike_network_dev
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: nike_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - nike_network_dev
    restart: unless-stopped

  # Main Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nike_backend_dev
    environment:
      - NODE_ENV=development
      - PORT=5001
      - DATABASE_URL=postgresql://nike_user:nike_password@postgres:5432/nike_db_dev
      - JWT_SECRETE_KEY=dev_jwt_secret_key
      - EMAIL=dev@example.com
      - PASSWORD=dev_password
      - ADMIN_EMAIL=admin@nike.com
      - ADMIN_PASSWORD=admin123
      - ADMIN_USERNAME=admin
    ports:
      - "5001:5001"
    depends_on:
      - postgres
      - redis
    networks:
      - nike_network_dev
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/node_modules
      - ./src/uploads:/app/src/uploads
    command: npm run dev

volumes:
  postgres_data_dev:
  redis_data_dev:

networks:
  nike_network_dev:
    driver: bridge 