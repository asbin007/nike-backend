version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nike_postgres
    environment:
      POSTGRES_DB: nike_db
      POSTGRES_USER: nike_user
      POSTGRES_PASSWORD: nike_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nike_network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: nike_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nike_network
    restart: unless-stopped

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nike_backend
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://nike_user:nike_password@postgres:5432/nike_db
      - JWT_SECRETE_KEY=your_jwt_secret_here
      - EMAIL=your_email@example.com
      - PASSWORD=your_email_password
      - ADMIN_EMAIL=admin@example.com
      - ADMIN_PASSWORD=admin_password
      - ADMIN_USERNAME=admin
      - CLOUDINARY_URL=your_cloudinary_url
      - CLOUDINARY_CLOUD_NAME=your_cloud_name
      - CLOUDINARY_API_KEY=your_api_key
      - CLOUDINARY_API_SECRET=your_api_secret
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - nike_network
    restart: unless-stopped
    volumes:
      - ./src/uploads:/app/src/uploads

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: nike_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - nike_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  nike_network:
    driver: bridge 